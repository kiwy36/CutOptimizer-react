/**
 * üß≠ HEADER - Cabecera de navegaci√≥n principal
 * 
 * üìç FUNCI√ìN:
 * - Muestra logo y nombre de la aplicaci√≥n
 * - Navegaci√≥n entre secciones (Home, Proyectos, Nuevo Proyecto)
 * - Estado de conexi√≥n y informaci√≥n del usuario
 * - Bot√≥n de logout cuando est√° autenticado
 * 
 * üéØ CARACTER√çSTICAS:
 * - Responsive para m√≥viles
 * - Muestra estado "Conectado" cuando hay usuario
 * - Navegaci√≥n contextual seg√∫n estado de auth
 * - Indicador visual de ruta activa
 * 
 * @param {Object} props - Propiedades del componente
 * @param {Object} props.user - Informaci√≥n del usuario autenticado
 * @param {Function} props.onLogout - Funci√≥n para cerrar sesi√≥n
 */

import React, { useState } from 'react'
import { Link, useLocation } from 'react-router-dom'
import './Header.css'

const Header = ({ user, onLogout }) => {
  const location = useLocation()
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)

  /**
   * üì± Maneja la apertura/cierre del men√∫ m√≥vil
   */
  const toggleMobileMenu = () => {
    setIsMobileMenuOpen(!isMobileMenuOpen)
  }

  /**
   * üéØ Verifica si una ruta est√° activa
   * @param {string} path - Ruta a verificar
   * @returns {boolean} True si la ruta est√° activa
   */
  const isActiveRoute = (path) => {
    return location.pathname === path
  }

  // Enlaces de navegaci√≥n para usuarios autenticados
  const navLinks = [
    { path: '/', label: 'Home', icon: 'üè†' },
    { path: '/projects', label: 'Proyectos', icon: 'üìÅ' },
    { path: '/projects/new', label: 'Nuevo Proyecto', icon: '‚ûï' },
    { path: '/news', label: 'Noticias', icon: 'üì∞' }
  ]

  return (
    <header className="header">
      <div className="header-container">
        {/* Logo y nombre de la app */}
        <div className="header-brand">
          <Link to="/" className="brand-link">
            <div className="brand-logo">
              <span>CO</span>
            </div>
            <div className="brand-text">
              <h1 className="brand-title">Cut Optimizer</h1>
              <p className="brand-subtitle">Optimizador de cortes inteligente</p>
            </div>
          </Link>
        </div>

        {/* Navegaci√≥n desktop */}
        <nav className="header-nav desktop-nav">
          <ul className="nav-list">
            {navLinks.map((link) => (
              <li key={link.path} className="nav-item">
                <Link
                  to={link.path}
                  className={`nav-link ${isActiveRoute(link.path) ? 'active' : ''}`}
                >
                  <span className="nav-icon">{link.icon}</span>
                  <span className="nav-label">{link.label}</span>
                </Link>
              </li>
            ))}
          </ul>
        </nav>

        {/* Informaci√≥n de usuario y acciones */}
        <div className="header-actions">
          {/* Estado de conexi√≥n */}
          {user && (
            <div className="user-status">
              <div className="status-indicator"></div>
              <span className="status-text">Conectado</span>
            </div>
          )}

          {/* Bot√≥n de logout */}
          {user && (
            <button 
              className="logout-btn"
              onClick={onLogout}
              title="Cerrar sesi√≥n"
            >
              <span className="logout-icon">üö™</span>
              <span className="logout-text">Salir</span>
            </button>
          )}

          {/* Bot√≥n men√∫ m√≥vil */}
          <button 
            className="mobile-menu-btn"
            onClick={toggleMobileMenu}
            aria-label="Men√∫ de navegaci√≥n"
          >
            <span></span>
            <span></span>
            <span></span>
          </button>
        </div>

        {/* Navegaci√≥n m√≥vil */}
        {isMobileMenuOpen && (
          <nav className="header-nav mobile-nav">
            <ul className="nav-list">
              {navLinks.map((link) => (
                <li key={link.path} className="nav-item">
                  <Link
                    to={link.path}
                    className={`nav-link ${isActiveRoute(link.path) ? 'active' : ''}`}
                    onClick={() => setIsMobileMenuOpen(false)}
                  >
                    <span className="nav-icon">{link.icon}</span>
                    <span className="nav-label">{link.label}</span>
                  </Link>
                </li>
              ))}
            </ul>
          </nav>
        )}
      </div>
    </header>
  )
}

export default Header